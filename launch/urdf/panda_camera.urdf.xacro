<?xml version='1.0' encoding='utf-8'?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="panda">

  <xacro:include filename="$(find franka_description)/robots/common/franka_robot.xacro"/>

  <!-- Name for this robot -->
  <xacro:arg name="arm_id" default="panda" />

  <!-- Should a franka_gripper be mounted at the flange?" -->
  <xacro:arg name="hand" default="false" />
  <!-- Positional offset between $(arm_id)_hand -> $(arm_id)_hand_tcp [m]. Only used when hand:=true -->
  <xacro:arg name="tcp_xyz" default="0 0 0.1034" />
  <!-- Rotational offset between $(arm_id)_hand -> $(arm_id)_hand_tcp [rad]. Only used when hand:=true -->
  <xacro:arg name="tcp_rpy" default="0 0 0" />

  <!-- Is the robot being simulated in gazebo?" -->
  <xacro:arg name="gazebo" default="false" />
  <!-- If `gazebo` arg is set, to which frame shall $(arm_id)_link0 be parented. Empty string for not fixing at all -->
  <xacro:arg name="parent" default="world" />
  <!-- If `gazebo` arg is set and `parent` not empty, what position offset between `parent` & $(arm_id)_link0 -->
  <xacro:arg name="xyz" default="0 0 0" />
  <!-- If `gazebo` arg is set and `parent` not empty, what rotation offset between `parent` & $(arm_id)_link0 -->
  <xacro:arg name="rpy" default="0 0 0" />

  <xacro:franka_robot arm_id="$(arg arm_id)"
                      joint_limits="${xacro.load_yaml('$(find franka_description)/robots/panda/joint_limits.yaml')}"
                      hand="$(arg hand)"
                      tcp_xyz="$(arg tcp_xyz)"
                      tcp_rpy="$(arg tcp_rpy)"
                      gazebo="$(arg gazebo)"
                      parent="$(arg parent)"
                      xyz="$(arg xyz)"
                      rpy="$(arg rpy)">
  </xacro:franka_robot>

  <!-- camera_joint -->
  <joint name="camera_joint" type="fixed">
    <origin xyz="0.045 -0.045 0" rpy="-${pi} -${pi/2.0} ${pi/4.0}"/>
    <parent link="$(arg arm_id)_link7"/>
    <child link="camera_link"/>
  </joint>

  <!-- camera_link -->
  <link name="camera_link">
    <visual>
        <origin xyz="0 0 0" rpy="-${pi} -${pi/2.0} 0"/>
        <geometry>
            <box size="0.06 0.04 0.025"/>
        </geometry>
    </visual>
    <inertial>
        <mass value="0.0001" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.0000001" ixy="0" ixz="0" iyy="0.0000001" iyz="0" izz="0.0000001" />
    </inertial>
  </link>
    
  <!-- camera_depth_link -->
  <link name="camera_depth_link" />
  <joint name="camera_depth_module" type="fixed">
    <origin xyz="0 0 0" rpy="-1.57 0 -1.57" />
    <parent link="camera_link" />
    <child  link="camera_depth_link" />
  </joint>

  <gazebo reference="camera_link"> <!-- your_camera_link -->
    <sensor type="depth" name="camera">       
      <always_on>true</always_on>
      <visualize>true</visualize>             
      <camera>
          <pose>0 0 0 0 0 0</pose>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
              <width>640</width>
              <height>480</height>
              <format>B8G8R8</format>
          </image>
          <depth_camera>

          </depth_camera>
          <clip>
              <near>0.1</near>
              <far>100</far>
          </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera</cameraName>
          <frameName>camera_depth_link</frameName>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>              
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudCutoff>0.4</pointCloudCutoff>                
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
          <CxPrime>0.0</CxPrime>
          <Cx>0.0</Cx>
          <Cy>0.0</Cy>
          <focalLength>0.0</focalLength>
          </plugin>
    </sensor>
  </gazebo>
 

</robot>
